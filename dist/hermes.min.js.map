{"version":3,"file":"hermes.min.js","sources":["../lib/structure/RequestManager.js","../lib/functions/HTTP2.js","../lib/functions/Request.js","../lib/functions/HTTP.js","../lib/functions/HTTPS.js","../lib/functions/Session.js","../lib/Index.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport { request } from \"http\";\r\nimport { Agent } from \"https\";\r\nimport { constants } from \"http2\";\r\n\r\nconst {\r\n  HTTP2_HEADER_PATH,\r\n  HTTP2_HEADER_METHOD,\r\n  HTTP2_HEADER_SCHEME,\r\n  HTTP2_HEADER_AUTHORITY,\r\n} = constants;\r\n\r\nclass RequestManager {\r\n  constructor() {\r\n    this.midia_types = [\"image\", \"video\", \"audio\"];\r\n  }\r\n\r\n  proxyParse(text) {\r\n    var input = text;\r\n\r\n    const protocol = input.split(\"://\")[0];\r\n\r\n    if (input.includes(\"@\"))\r\n      input = input.substring(input.lastIndexOf(\"@\") + 1);\r\n    else if (input.includes(\"://\")) input = input.split(\"://\")[1];\r\n\r\n    const host = input.split(\":\")[0];\r\n    const port = parseInt(input.split(\":\")[1]);\r\n\r\n    input = text.split(\"://\")[1];\r\n\r\n    input = text.substring(0, text.lastIndexOf(\"@\"));\r\n    const [username, password] = input.split(\":\");\r\n\r\n    return { host, port, protocol: protocol || \"https\", username, password };\r\n  }\r\n\r\n  proxyTunnel(url, proxy, headers = {}, timeout) {\r\n    return new Promise((resolve, reject) => {\r\n      const urlParsed = new URL(url);\r\n      const parsed_proxy =\r\n        typeof proxy == \"object\" ? proxy : this.proxyParse(proxy);\r\n\r\n      if (parsed_proxy.username) {\r\n        headers[\"Proxy-Authorization\"] =\r\n          \"Basic \" +\r\n          Buffer.from(\r\n            parsed_proxy.username + \":\" + parsed_proxy.password\r\n          ).toString(\"base64\");\r\n      }\r\n\r\n      request({\r\n        host: parsed_proxy.host,\r\n        port: parsed_proxy.port,\r\n        method: \"CONNECT\",\r\n        maxVersion: \"TLSv1.3\",\r\n        path: `${urlParsed.hostname}:${urlParsed.port ? urlParsed.port : 443}`,\r\n        timeout,\r\n        headers,\r\n      })\r\n        .on(\"connect\", (response, socket) => {\r\n          if (response.statusCode == 200) {\r\n            resolve(socket);\r\n          } else {\r\n            reject(response);\r\n          }\r\n        })\r\n        .on(\"error\", (err) => reject(err))\r\n        .on(\"timeout\", (err) => reject(\"timeout to connect in proxy\"))\r\n        .end();\r\n    });\r\n  }\r\n\r\n  parseResponseData(buffer, headers) {\r\n    var data;\r\n\r\n    try {\r\n      data = JSON.parse(buffer.toString());\r\n\r\n      return data;\r\n    } catch (error) {\r\n      if (\r\n        headers[\"content-type\"] &&\r\n        this.midia_types.some((type) => headers[\"content-type\"].includes(type))\r\n      ) {\r\n        data = buffer;\r\n      } else {\r\n        data = buffer.toString();\r\n      }\r\n\r\n      return data;\r\n    }\r\n  }\r\n\r\n  async parseOptions(options = {}) {\r\n    const parsed_url = new URL(options.url);\r\n\r\n    const buffer = Buffer.from(\r\n      typeof options.payload == \"object\"\r\n        ? JSON.stringify(options.payload)\r\n        : typeof options.payload != \"string\" && options.payload\r\n        ? String(options.payload)\r\n        : options.payload || \"\"\r\n    );\r\n\r\n    if (options.http2) {\r\n      if (options.proxy) {\r\n        options.socket = await this.proxyTunnel(\r\n          options.url,\r\n          options.proxy,\r\n          {},\r\n          15000\r\n        );\r\n      }\r\n\r\n      return {\r\n        url: options.url,\r\n        payload: buffer,\r\n        client: {\r\n          maxVersion: \"TLSv1.3\",\r\n          ALPNProtocols: [\"h2\", \"http/1.1\"],\r\n          socket: options.socket,\r\n        },\r\n        request: {\r\n          [HTTP2_HEADER_AUTHORITY]: parsed_url.host,\r\n          [HTTP2_HEADER_PATH]: parsed_url.pathname || \"/\",\r\n          [HTTP2_HEADER_SCHEME]: parsed_url.protocol.split(\":\")[0],\r\n          [HTTP2_HEADER_METHOD]:\r\n            constants[`HTTP2_METHOD_${options.method?.toUpperCase()}`],\r\n          \"Content-Type\":\r\n            options?.headers && options?.headers[\"Content-Type\"]\r\n              ? options?.headers[\"Content-Type\"]\r\n              : \"text/plain\",\r\n          \"Content-Length\": buffer.length,\r\n          Accept: \"*/*, image/*\",\r\n          ...options?.headers,\r\n        },\r\n      };\r\n    } else {\r\n      if (options.proxy) {\r\n        options.agent = new Agent({\r\n          socket: await this.proxyTunnel(\r\n            options.url,\r\n            options.proxy,\r\n            options.headers,\r\n            options.timeout || 15000\r\n          ).catch((error) => {\r\n            throw error;\r\n          }),\r\n          keepAlive: true,\r\n        });\r\n      } else {\r\n        options.agent = new Agent(options);\r\n      }\r\n\r\n      return {\r\n        url: options.url,\r\n        payload: buffer,\r\n        request: {\r\n          origin: parsed_url.origin,\r\n          href: parsed_url.href,\r\n          protocol: parsed_url.protocol || \"https:\",\r\n          hostname: parsed_url.hostname,\r\n          path: parsed_url.pathname || \"/\",\r\n          port: parsed_url.port || 443,\r\n          method: options.method?.toUpperCase() || \"GET\",\r\n          maxVersion: \"TLSv1.3\",\r\n          timeout: options.timeout || 15000,\r\n          headers: {\r\n            accept: \"application/json, text/plain, image/*, */*\",\r\n            \"accept-language\": \"en-US,en;q=0.9\",\r\n            \"Content-Length\": buffer.length,\r\n            ...options?.headers,\r\n          },\r\n          ...options,\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RequestManager();\r\n","import { connect, constants } from \"http2\";\r\nimport RequestManager from \"../structure/RequestManager.js\";\r\n\r\nconst { HTTP2_HEADER_STATUS } = constants;\r\n\r\nexport default function http2(options) {\r\n  return new Promise(async (resolve) => {\r\n    const parsed_options = await RequestManager.parseOptions(options);\r\n    const clientSession = connect(parsed_options.url, parsed_options.client);\r\n    const req = clientSession.request(parsed_options.request);\r\n\r\n    req.on(\"response\", (headers, flags) => {\r\n      const response_data = [];\r\n\r\n      req.on(\"data\", (chunk) => {\r\n        response_data.push(chunk);\r\n      });\r\n\r\n      req.on(\"end\", () => {\r\n        req.close();\r\n        clientSession.close();\r\n\r\n        resolve({\r\n          flags,\r\n          status: headers[HTTP2_HEADER_STATUS],\r\n          headers,\r\n          data: RequestManager.parseResponseData(\r\n            Buffer.concat(response_data),\r\n            headers\r\n          ),\r\n        });\r\n      });\r\n    });\r\n\r\n    if (parsed_options.payload?.length > 0) req.write(parsed_options.payload);\r\n\r\n    req.end();\r\n  });\r\n}\r\n\r\nfunction parseData(buffer) {\r\n  const string = Buffer.concat(buffer).toString();\r\n\r\n  try {\r\n    return JSON.parse(string);\r\n  } catch (error) {\r\n    return string;\r\n  }\r\n}\r\n","\"use strict\";\r\n\r\nimport __HTTP from \"./HTTP.js\";\r\nimport __HTTPS from \"./HTTPS.js\";\r\nimport __HTTP2 from \"./HTTP2.js\";\r\n\r\nfunction Request(options) {\r\n  return options.http2\r\n    ? __HTTP2(options)\r\n    : options.url.includes(\"http:\")\r\n    ? __HTTP(options)\r\n    : __HTTPS(options);\r\n}\r\n\r\nexport default Request;\r\n","\"use strict\";\r\n\r\nimport { request } from \"http\";\r\nimport RequestManager from \"../structure/RequestManager.js\";\r\n\r\nfunction BaseRequest(options) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const parsed_options = await RequestManager.parseOptions(options);\r\n\r\n    const req = request(parsed_options.request, (res) => {\r\n      const response_data = [];\r\n\r\n      res.on(\"data\", (chunk) => {\r\n        response_data.push(chunk);\r\n      });\r\n\r\n      res.on(\"end\", () => {\r\n        res.data = RequestManager.parseResponseData(\r\n          Buffer.concat(response_data),\r\n          res.headers\r\n        );\r\n\r\n        resolve(res);\r\n      });\r\n    }).on(\"error\", (error) => {\r\n      reject(error);\r\n    });\r\n\r\n    if (parsed_options.payload?.length > 0) req.write(parsed_options.payload);\r\n\r\n    req.end();\r\n  });\r\n}\r\n\r\nexport default BaseRequest;\r\n","\"use strict\";\r\n\r\nimport { request } from \"https\";\r\nimport RequestManager from \"../structure/RequestManager.js\";\r\n\r\nfunction BaseRequest(options) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const parsed_options = await RequestManager.parseOptions(options);\r\n\r\n    const req = request(parsed_options.request, (res) => {\r\n      const response_data = [];\r\n\r\n      res.on(\"data\", (chunk) => {\r\n        response_data.push(chunk);\r\n      });\r\n\r\n      res.on(\"end\", () => {\r\n        res.data = RequestManager.parseResponseData(\r\n          Buffer.concat(response_data),\r\n          res.headers\r\n        );\r\n\r\n        resolve(res);\r\n      });\r\n    }).on(\"error\", (error) => {\r\n      reject(error);\r\n    });\r\n\r\n    if (parsed_options.payload?.length > 0) req.write(parsed_options.payload);\r\n\r\n    req.end();\r\n  });\r\n}\r\n\r\nexport default BaseRequest;\r\n","\"use strict\";\r\n\r\nimport Request from \"./Request.js\";\r\n\r\nclass Session {\r\n  constructor() {\r\n    this.cookies = \"\";\r\n  }\r\n\r\n  async req(options) {\r\n    const parsed_options = this.addCookiesInOptions(options);\r\n    const response = await Request(parsed_options);\r\n\r\n    try {\r\n      if (response.headers[\"set-cookie\"]) {\r\n        if (this.cookies)\r\n          this.cookies +=\r\n            \"; \" +\r\n            response.headers[\"set-cookie\"]\r\n              .map((c) => c.split(\";\")[0])\r\n              .join(\"; \");\r\n        else\r\n          this.cookies = response.headers[\"set-cookie\"]\r\n            .map((c) => c.split(\";\")[0])\r\n            .join(\"; \");\r\n      }\r\n    } catch (error) {}\r\n\r\n    return response;\r\n  }\r\n\r\n  addCookie(cookie) {\r\n    if (typeof cookie == \"object\") {\r\n      if (this.cookies.includes(cookie.name)) {\r\n        return false;\r\n      } else if (this.cookies) {\r\n        this.cookies = `; ${cookie.name}=${cookie.value}`;\r\n\r\n        return true;\r\n      } else {\r\n        this.cookies = `${cookie.name}=${cookie.value}`;\r\n\r\n        return true;\r\n      }\r\n    } else {\r\n      if (this.cookies.includes(cookie.split(\"=\")[0])) {\r\n        return false;\r\n      } else if (this.cookies) {\r\n        this.cookies = `; ${cookie.trim()}`;\r\n\r\n        return true;\r\n      } else {\r\n        this.cookies = `${cookie.trim()}`;\r\n\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCookie(cookie_name) {\r\n    if (this.cookies.includes(cookie_name)) {\r\n      this.cookies = this.cookies.replace(\r\n        this.cookies.slice(this.cookies.indexOf(cookie_name)).split(\" \")[0],\r\n        \"\"\r\n      );\r\n\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  addCookiesInOptions(options) {\r\n    if (this.cookies) {\r\n      if (options.headers && options.headers?.cookie) {\r\n        options.headers.cookie += \"; \" + this.cookies;\r\n      } else {\r\n        options.headers.cookie = this.cookies;\r\n      }\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n\r\nexport default Session;\r\n","import request from \"./functions/Request.js\";\r\nimport Session from \"./functions/Session.js\";\r\n\r\nrequest.Session = Session;\r\n\r\n[\r\n  \"get\",\r\n  \"post\",\r\n  \"patch\",\r\n  \"options\",\r\n  \"delete\",\r\n  \"head\",\r\n  \"put\",\r\n  \"link\",\r\n  \"unlink\",\r\n  \"purge\",\r\n].forEach((method) => {\r\n  request[method] = (options) => request({ ...options, method });\r\n});\r\n\r\nexport default request;\r\n"],"names":["HTTP2_HEADER_PATH","constants","HTTP2_HEADER_METHOD","HTTP2_HEADER_SCHEME","HTTP2_HEADER_AUTHORITY","RequestManager","_classCallCheck","this","midia_types","_parseOptions","_createClass","key","value","text","input","protocol","split","includes","substring","lastIndexOf","host","port","parseInt","_input$split2","_slicedToArray","username","password","url","proxy","_this","headers","arguments","length","undefined","timeout","Promise","resolve","reject","urlParsed","URL","parsed_proxy","_typeof","proxyParse","Buffer","from","toString","request","method","maxVersion","path","hostname","on","response","socket","statusCode","err","end","buffer","JSON","parse","error","some","type","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","parsed_url","_options$method","_objectSpread2","_options$method2","_args","wrap","_context","prev","next","payload","stringify","String","http2","proxyTunnel","sent","abrupt","client","ALPNProtocols","pathname","_defineProperty","concat","toUpperCase","t0","Agent","t1","t2","keepAlive","agent","_objectSpread","origin","href","accept","stop","apply","RequestManager$1","HTTP2_HEADER_STATUS","Request","_ref","_parsed_options$paylo","parsed_options","clientSession","req","parseOptions","connect","flags","response_data","chunk","push","close","status","data","parseResponseData","write","_x","__HTTP2","res","_x2","__HTTP","__HTTPS","Session","cookies","_req","addCookiesInOptions","map","c","join","cookie","name","trim","cookie_name","replace","slice","indexOf","_options$headers","forEach"],"mappings":"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"}